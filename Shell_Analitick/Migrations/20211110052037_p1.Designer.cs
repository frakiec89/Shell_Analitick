// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shell_Analitick.DB;

namespace Shell_Analitick.Migrations
{
    [DbContext(typeof(MySqlLiteContext))]
    [Migration("20211110052037_p1")]
    partial class p1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("Shell_Analitick.DB.Model.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProductId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Shell_Analitick.DB.Model.ProductStorege", b =>
                {
                    b.Property<int>("ProductStoregeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Count")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StoregeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProductStoregeId");

                    b.HasIndex("ProductId");

                    b.HasIndex("StoregeId");

                    b.ToTable("ProductStoreges");
                });

            modelBuilder.Entity("Shell_Analitick.DB.Model.ProductType", b =>
                {
                    b.Property<int>("ProductTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ProductTypeId");

                    b.ToTable("ProductTypes");
                });

            modelBuilder.Entity("Shell_Analitick.DB.Model.Sell", b =>
                {
                    b.Property<int>("SellId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Count")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateSell")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SellerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StoregeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SellId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SellerId");

                    b.HasIndex("StoregeId");

                    b.ToTable("Sells");
                });

            modelBuilder.Entity("Shell_Analitick.DB.Model.Seller", b =>
                {
                    b.Property<int>("SellerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("SellerId");

                    b.ToTable("Sellers");
                });

            modelBuilder.Entity("Shell_Analitick.DB.Model.Storege", b =>
                {
                    b.Property<int>("StoregeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Adress")
                        .HasColumnType("TEXT");

                    b.Property<int>("NumberStorege")
                        .HasColumnType("INTEGER");

                    b.HasKey("StoregeId");

                    b.ToTable("Storeges");
                });

            modelBuilder.Entity("Shell_Analitick.DB.Model.Product", b =>
                {
                    b.HasOne("Shell_Analitick.DB.Model.ProductType", "ProductType")
                        .WithMany()
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductType");
                });

            modelBuilder.Entity("Shell_Analitick.DB.Model.ProductStorege", b =>
                {
                    b.HasOne("Shell_Analitick.DB.Model.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shell_Analitick.DB.Model.Storege", "Storege")
                        .WithMany()
                        .HasForeignKey("StoregeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Storege");
                });

            modelBuilder.Entity("Shell_Analitick.DB.Model.Sell", b =>
                {
                    b.HasOne("Shell_Analitick.DB.Model.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shell_Analitick.DB.Model.Seller", "Seller")
                        .WithMany()
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shell_Analitick.DB.Model.Storege", "Storege")
                        .WithMany()
                        .HasForeignKey("StoregeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Seller");

                    b.Navigation("Storege");
                });
#pragma warning restore 612, 618
        }
    }
}
